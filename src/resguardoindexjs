import React from 'react';
import ReactDOM from 'react-dom';
import './index.css';
import App from './App';
import * as serviceWorker from './serviceWorker';

import { createStore, applyMiddleware, compose } from 'redux'
import rootReducer from './redux/store/reducers/rootReducer'
import { Provider } from 'react-redux'
import thunk from 'redux-thunk'
import fbConfig from './services/firebaseConfig'

import { createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore'
import { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase'

import 'firebase/firestore';

const rrfConfig = { 
    userProfile: 'projects',
    useFirestoreForProfile: true
}

const store = createStore(rootReducer, 
    compose(
        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),
        reduxFirestore(fbConfig)
    )
    );

const rffProps = {
    fbConfig,
    useFirestoreForProfile: true,
    config: rrfConfig,
    dispatch: store.dispatch,
    createFirestoreInstance
}

ReactDOM.render(
    <Provider store={store}>
        <ReactReduxFirebaseProvider {...rffProps}>
            <App />  
        </ReactReduxFirebaseProvider>
    </Provider>, 
document.getElementById('root'));

serviceWorker.unregister();







// ***************************************************************


// import React from 'react';
// import ReactDOM from 'react-dom';
// import './index.css';
// import App from './App';
// import * as serviceWorker from './serviceWorker';

// import fbConfig from './services/firebaseConfig'

// import { createStore, applyMiddleware, compose } from 'redux'
// import rootReducer from './redux/store/reducers/rootReducer'
// import thunk from 'redux-thunk'
// import { reduxFirestore, getFirestore } from 'redux-firestore'
// import { getFirebase, ReactReduxFirebaseProvider } from 'react-redux-firebase'

// import { Provider } from 'react-redux'
// import { createFirestoreInstance } from 'redux-firestore'
// import firebase from 'firebase/app'


// const store = createStore(
//   rootReducer,
//   compose(
//     applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),
//     reduxFirestore(fbConfig, firebase)
//   )
// );


// const rrfConfig = { 
//   userProfile: 'projects',
//   useFirestoreForProfile: true
// }

// const rrfProps = {
//   fbConfig,
//   useFirestoreForProfile: true,
//   config: rrfConfig,
//   dispatch: store.dispatch,
//   createFirestoreInstance 
//    }


// ReactDOM.render(
//   <React.StrictMode>
//     <Provider store={store}>
//       <ReactReduxFirebaseProvider {...rrfProps}>
//         <App />
//       </ReactReduxFirebaseProvider>
//     </Provider>
//   </React.StrictMode>,
//   document.getElementById('root')
// );
// serviceWorker.unregister();



// ***************************************************************

// let WithRouter = () => <BrowserRouter> <App/> </BrowserRouter>
// let WithStore = () => <Provider store={store} > <WithRouter/> </Provider>



// If you want your app to work offline and load faster, you can change
// unregister() to register() below. Note this comes with some pitfalls.
// Learn more about service workers: https://bit.ly/CRA-PWA


// ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));
// serviceWorker.unregister();